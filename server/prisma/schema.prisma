// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TypeCategories {
  id        String   @id @default(cuid())
  name      String?
  categories Categories[]
}
model Format {
  id         String   @id @default(cuid())
  name       String?
   tournaments Tournaments[]
}

model Categories {
  id                String          @id @default(cuid())
  name              String?
  typeCategoriesId  String?
  typeCategories    TypeCategories? @relation(fields: [typeCategoriesId], references: [id])
  clubs             ClubCategories[]
}

model ClubCategories {
  id         String   @id @default(cuid())
  clubId     String
  categoryId String

  club       Club      @relation(fields: [clubId], references: [id])
  category   Categories @relation(fields: [categoryId], references: [id])

  @@unique([clubId, categoryId])
}


model Club {
  id      String           @id @default(cuid())
  name    String
  categories ClubCategories[]
  historyPlayers HistoryPlayer[]
}

model TyperOfPass {
  id         String   @id @default(cuid())
  name       String?
  historyPlayers HistoryPlayer[]
}

model Player{
  id          String   @id @default(cuid())
  name        String
  Ci          Int
  lastName    String
  nationality String
  age         Int
  commet      Int
  birthdate   DateTime
  photo       String
  historyPlayers HistoryPlayer[]
}



model HistoryPlayer {
  id              String       @id @default(cuid())

  clubId          String
  playerId        String
  typeOfPassId    String
  
  active          Boolean
  allgoals        Int?
  allfaults       Int?
  allcardsYellow  Int?
  allcardsRed     Int?

  payInscription  Boolean

  club            Club         @relation(fields: [clubId], references: [id])
  player          Player       @relation(fields: [playerId], references: [id])
  typeOfPass     TyperOfPass   @relation(fields: [typeOfPassId], references: [id])

  @@unique([clubId, playerId, typeOfPassId])
}
model Tournaments {
  id        String   @id @default(cuid())
  name      String?
  dateStart DateTime
  dateEnd   DateTime
  formatId  String?
  format    Format?  @relation(fields: [formatId], references: [id])
  games     Game[]
}
model Game {
  id                    String    @id @default(cuid())
  firstTeam             String?
  secondTeam            String?
  firstDate             DateTime?
  secondDate            DateTime?
  cardsYellow           Int?
  cardsRed              Int?
  faults                Int?
  amountGoalsFirstTeam  Int?
  amountGoalsSecondTeam Int?
  winner                String?
  tournamentId          String?
  tournament            Tournaments? @relation(fields: [tournamentId], references: [id])
}